{"ast":null,"code":"var _jsxFileName = \"/home/sanyam/Desktop/PathFinding Visualizer/src/components/HelpModal/HelpModal.jsx\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    \"aria-hidden\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nexport default function HelpModal(props) {\n  const {\n    helpOpen,\n    handleHelpClose\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleHelpClose,\n    \"aria-labelledby\": \"help-dialog\",\n    open: helpOpen,\n    scroll: \"paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"help-dialog\",\n    onClose: handleHelpClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Help\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"1. Click on the board to add and remove walls/weights. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 68\n    }\n  }), \"2. Click and drag the start/end nodes to move them. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 65\n    }\n  }), \"3. Choose the algorithm and speed from the drop-down menus. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 73\n    }\n  }), \"4. Choose between adding walls or weights from the slider. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 72\n    }\n  }), \"5. Choose the cost of the weights from the slider. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 64\n    }\n  }), \"6. Empty nodes \\\"cost\\\" 1 to traverse, whereas weights are more costly to pass through. Walls are impenetrable, meaning they cannot be traversed. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 34\n    }\n  }), \"7. Weighted algorithms (Djikstra and A*) will take weight nodes into account. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }\n  }), \"8. Unweighted algorithms (BFS and DFS) will ignore weight nodes (i.e. treat the nodes as empty). \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 46\n    }\n  }), \"9. DFS does not guarantee the shortest path, whereas the other algorithms do. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 28\n    }\n  }), \"10. When the visualizer runs, it captures and uses a snapshot of the board and configurations.\"))));\n}","map":{"version":3,"names":["React","withStyles","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","styles","theme","root","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","createElement","Object","assign","disableTypography","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","DialogContent","HelpModal","helpOpen","handleHelpClose","open","scroll","id","dividers"],"sources":["/home/sanyam/Desktop/PathFinding Visualizer/src/components/HelpModal/HelpModal.jsx"],"sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon aria-hidden />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport default function HelpModal(props) {\n  const { helpOpen, handleHelpClose } = props;\n  return (\n    <div>\n      <Dialog\n        onClose={handleHelpClose}\n        aria-labelledby=\"help-dialog\"\n        open={helpOpen}\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"help-dialog\" onClose={handleHelpClose}>\n          Help\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography>\n            1. Click on the board to add and remove walls/weights. <br />\n            2. Click and drag the start/end nodes to move them. <br />\n            3. Choose the algorithm and speed from the drop-down menus. <br />\n            4. Choose between adding walls or weights from the slider. <br />\n            5. Choose the cost of the weights from the slider. <br />\n            6. Empty nodes &quot;cost&quot; 1 to traverse, whereas weights are\n            more costly to pass through. Walls are impenetrable, meaning they\n            cannot be traversed. <br />\n            7. Weighted algorithms (Djikstra and A*) will take weight nodes into\n            account. <br />\n            8. Unweighted algorithms (BFS and DFS) will ignore weight nodes\n            (i.e. treat the nodes as empty). <br />\n            9. DFS does not guarantee the shortest path, whereas the other\n            algorithms do. <br />\n            10. When the visualizer runs, it captures and uses a snapshot of the\n            board and configurations.\n          </Typography>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}