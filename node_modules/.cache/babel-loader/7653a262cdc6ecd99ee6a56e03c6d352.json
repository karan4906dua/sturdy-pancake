{"ast":null,"code":"var _jsxFileName = \"/home/sanyam/Desktop/PathFinding Visualizer/src/components/Node/Node.jsx\";\nimport React from 'react';\nimport './Node.css';\nimport { NODE_INITIAL, NODE_SHORTEST, NODE_VISITED, NODE_START, NODE_FINISH } from '../../constants';\nimport { isFinishPos, isStartPos } from '../../utils';\nexport default class Node extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.setType = value => {\n      this.setState({\n        type: value\n      });\n    };\n    this.setIsVisited = value => {\n      this.setState({\n        isVisited: value.isVisited,\n        isAnimated: value.isAnimated\n      });\n    };\n    this.setIsShortest = value => {\n      this.setState({\n        isShortest: value.isShortest,\n        isAnimated: value.isAnimated\n      });\n    };\n    this.forceNodeUpdate = () => {\n      this.forceUpdate();\n    };\n    this.state = {\n      type: NODE_INITIAL,\n      isVisited: false,\n      isShortest: false,\n      isAnimated: true\n    };\n    const {\n      rowIdx,\n      colIdx\n    } = this.props;\n    let {\n      updateNodeCache\n    } = this.props;\n    updateNodeCache.set(`${rowIdx}-${colIdx}`, {\n      setType: this.setType,\n      setIsVisited: this.setIsVisited,\n      setIsShortest: this.setIsShortest,\n      forceNodeUpdate: this.forceNodeUpdate\n    });\n  }\n\n  // Set state methods\n\n  // Helper methods\n  getNodeClassNames() {\n    const {\n      rowIdx,\n      colIdx,\n      start,\n      finish\n    } = this.props;\n    if (isStartPos(colIdx, rowIdx, start)) {\n      return ' ' + NODE_START;\n    }\n    if (isFinishPos(colIdx, rowIdx, finish)) {\n      return ' ' + NODE_FINISH;\n    }\n    if (this.state.type === NODE_INITIAL) {\n      return '';\n    }\n    return ' ' + this.state.type;\n  }\n  getPathClassNames() {\n    let extraClassNames = '';\n    if (this.state.isVisited) {\n      extraClassNames += ' ' + NODE_VISITED;\n      if (this.state.isAnimated) {\n        extraClassNames += ' animated';\n      }\n    }\n    if (this.state.isShortest) {\n      extraClassNames += ' ' + NODE_SHORTEST;\n      if (this.state.isAnimated) {\n        extraClassNames += ' animated';\n      }\n    }\n    return extraClassNames;\n  }\n  render() {\n    const {\n      rowIdx,\n      colIdx\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: `node-${rowIdx}-${colIdx}`,\n      className: `board__node${this.getNodeClassNames()}`,\n      \"data-row-idx\": rowIdx,\n      \"data-col-idx\": colIdx\n      // data-type={this.state.type}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `board__path${this.getPathClassNames()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"names":["React","NODE_INITIAL","NODE_SHORTEST","NODE_VISITED","NODE_START","NODE_FINISH","isFinishPos","isStartPos","Node","PureComponent","constructor","props","setType","value","setState","type","setIsVisited","isVisited","isAnimated","setIsShortest","isShortest","forceNodeUpdate","forceUpdate","state","rowIdx","colIdx","updateNodeCache","set","getNodeClassNames","start","finish","getPathClassNames","extraClassNames","render","createElement","id","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/sanyam/Desktop/PathFinding Visualizer/src/components/Node/Node.jsx"],"sourcesContent":["import React from 'react';\nimport './Node.css';\nimport {\n  NODE_INITIAL,\n  NODE_SHORTEST,\n  NODE_VISITED,\n  NODE_START,\n  NODE_FINISH,\n} from '../../constants';\nimport { isFinishPos, isStartPos } from '../../utils';\n\nexport default class Node extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: NODE_INITIAL,\n      isVisited: false,\n      isShortest: false,\n      isAnimated: true,\n    };\n\n    const { rowIdx, colIdx } = this.props;\n    let { updateNodeCache } = this.props;\n    updateNodeCache.set(`${rowIdx}-${colIdx}`, {\n      setType: this.setType,\n      setIsVisited: this.setIsVisited,\n      setIsShortest: this.setIsShortest,\n      forceNodeUpdate: this.forceNodeUpdate,\n    });\n  }\n\n  // Set state methods\n  setType = (value) => {\n    this.setState({ type: value });\n  };\n\n  setIsVisited = (value) => {\n    this.setState({ isVisited: value.isVisited, isAnimated: value.isAnimated });\n  };\n\n  setIsShortest = (value) => {\n    this.setState({\n      isShortest: value.isShortest,\n      isAnimated: value.isAnimated,\n    });\n  };\n\n  forceNodeUpdate = () => {\n    this.forceUpdate();\n  };\n\n  // Helper methods\n  getNodeClassNames() {\n    const { rowIdx, colIdx, start, finish } = this.props;\n    if (isStartPos(colIdx, rowIdx, start)) {\n      return ' ' + NODE_START;\n    }\n    if (isFinishPos(colIdx, rowIdx, finish)) {\n      return ' ' + NODE_FINISH;\n    }\n    if (this.state.type === NODE_INITIAL) {\n      return '';\n    }\n    return ' ' + this.state.type;\n  }\n\n  getPathClassNames() {\n    let extraClassNames = '';\n    if (this.state.isVisited) {\n      extraClassNames += ' ' + NODE_VISITED;\n      if (this.state.isAnimated) {\n        extraClassNames += ' animated';\n      }\n    }\n    if (this.state.isShortest) {\n      extraClassNames += ' ' + NODE_SHORTEST;\n      if (this.state.isAnimated) {\n        extraClassNames += ' animated';\n      }\n    }\n    return extraClassNames;\n  }\n\n  render() {\n    const { rowIdx, colIdx } = this.props;\n    return (\n      <div\n        id={`node-${rowIdx}-${colIdx}`}\n        className={`board__node${this.getNodeClassNames()}`}\n        data-row-idx={rowIdx}\n        data-col-idx={colIdx}\n        // data-type={this.state.type}\n      >\n        <div className={`board__path${this.getPathClassNames()}`} />\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}